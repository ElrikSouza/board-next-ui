version: 2.1

jobs:
  merge-main:
    docker:
      - image: cimg/node:20.6.0
      - image: cimg/redis:6.2
      - image: cimg/postgres:15.3

    environment:
      DB_USER: postgres
      DB_PASS: postgres
      DB_HOST: localhost
      DB_PORT: 5432
      REDIS_PORT: 6379

    steps:
      - checkout

      #   - run:
      #       name: "whathever that is"
      #       command: echo 127.0.0.1 devhost | sudo tee -a /etc/hosts
      #   - run:
      #       name: "whathever that is"
      #       command: echo 127.0.0.1 localhost | sudo tee -a /etc/hosts

      - run:
          name: "Print current frontend branch"
          command: "git rev-parse --abbrev-ref HEAD"

      - run:
          name: "Merge feature/front with main/front"
          command: "git merge main"

      - save_cache:
          key: dependency-cache-{{ checksum "package-lock.json" }}
          paths:
            - ./node_modules
            - ./.next/cache

      - run:
          name: "Install frontend dependencies"
          command: "npm ci"

      - run:
          name: "Build frontend"
          command: "npm run build"

      - run:
          name: "Start frontend"
          command: "PORT=5173 npm run start"
          background: true
          environment:
            PORT: 5173
      - run:
          name: "Curl to validate frontend"
          command: "sleep 7 && curl localhost:5173"

      - run:
          name: "Clone backend"
          command: "cd .. && git clone https://github.com/ElrikSouza/board-api.git"

      - run:
          name: "Install backend dependencies"
          command: "cd ../board-api && rm -rf node_modules && yarn install --frozen-lockfile"

      - run:
          name: "Build backend"
          command: "cd ../board-api && yarn build"

      - run:
          name: "Run backend"
          command: "cd ../board-api && yarn start:prod"
          background: true

      - run:
          name: "Clone QA"
          command: "cd .. && git clone https://github.com/ElrikSouza/board-qa.git"

      - run:
          name: "Install QA Dependencies"
          command: "cd ../board-qa && rm -rf node_modules && yarn install --frozen-lockfile"

      - run:
          name: "Install playwright"
          command: "npx playwright install --with-deps"

      - run:
          name: "Run tests"
          command: "cd ../board-qa && npx playwright test"

# Orchestrate jobs using workflows
# See: https://circleci.com/docs/configuration-reference/#workflows
workflows:
  e2etest:
    filters:
      branches:
        only:
          - protected

    jobs:
      - merge-main
