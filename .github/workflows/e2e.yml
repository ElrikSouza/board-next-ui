name: E2E Poc
run-name: e2e poc

on:
  workflow_dispatch:

  pull_request:
    branches:
      - main

jobs:
  front_build:
    name: "Frontend build"
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout the Frontend"
        uses: actions/checkout@v3

      # - name: "Use node 18"
      #   uses: actions/setup-node@v3
      #   with:
      #     node-version: 18
      #     cache: "npm"

      # - name: "Install front deps"
      #   run: "npm install"

      # - name: "check resources"
      #   run: "free -h"

      # - name: "Build front"
      #   run: "yarn build"

      - name: Login into github cli
        env:
          GIT_TOKEN: "${{ secrets.TOKEN }}"
        run: echo ${GIT_TOKEN} | gh auth login --with-token

      - name: Set up git identity
        run: |
          git config --global user.email "ci@example.com"
          git config --global user.name "ci"

      - name: Clone backend
        run: |
          git clone https://github.com/ElrikSouza/board-api.git

      - name: Get pr branch
        env:
          PR_BODY: "${{ github.event.pull_request.body }}"
        run: |
          PR=$(echo "$PR_BODY" | grep "back pr=" | { grep -v grep || true; })
          IFS='='
          read -ra arr <<< "$PR"
          PR_URL=$(echo ${arr[1]} | xargs echo -n)
          if [ ! -z "$PR_URL" ]
          then
            # merge hub server feature with main
            echo "PR url detected. Merging with main..."
            cd board-api 
            gh pr checkout $PR_URL

            PRE_MERGE_SHA=$(git rev-parse HEAD)
            echo "PRE_MERGE_SHA=$PRE_MERGE_SHA" >> "$GITHUB_ENV"

            git merge main

            # set front pr as pending
            FRONT_HEAD_SHA="${{ github.event.pull_request.head.sha }}"
            gh api \
              --method POST \
              -H "Accept: application/vnd.github+json" \
              -H "X-GitHub-Api-Version: 2022-11-28" \
              /repos/ElrikSouza/board-next-ui/statuses/$FRONT_HEAD_SHA \
              -f state='pending' \
              -f description='Esperando merge da pr do back' \
              -f context='E2E Test/Merge'

          else
            echo "No PR url detected. Using the main brach for testing"
            PRE_MERGE_SHA="ignore"
            echo "PRE_MERGE_SHA=$PRE_MERGE_SHA" >> "$GITHUB_ENV"
          fi

      - name: Unlock backend pr if needed
        run: |
          echo $PRE_MERGE_SHA
          if [[ ! "$PRE_MERGE_SHA" == "ignore" ]]
          then
            gh api \
              --method POST \
              -H "Accept: application/vnd.github+json" \
              -H "X-GitHub-Api-Version: 2022-11-28" \
              /repos/ElrikSouza/board-api/statuses/$PRE_MERGE_SHA \
              -f state='success' \
              -f description='Testes e2e passaram' \
              -f context='E2E Test' \
              -f target_url "https://github.com/ElrikSouza/board-next-ui/pull/${{ github.event.pull_request.number}}"
          fi
